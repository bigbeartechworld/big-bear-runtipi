# Configuration for pd3f setup

# Name of the big-bear-pd3f application
name: big-bear-pd3f
# Service definitions for the big-bear-pd3f application
services:
  # Service name: parsr
  parsr:
    image: axarev/parsr:v1.2.2
    networks:
      - tipi_main_network
    expose:
      - 3001
    labels:
      runtipi.managed: "true"
  # Service name: redis
  redis:
    image: redis:6.2.20-alpine@sha256:2185e741f4c1e7b0ea9ca1e163a3767c4270a73086b6bbea2049a7203212fb7f
    networks:
      - tipi_main_network
    expose:
      - 6379
    labels:
      runtipi.managed: "true"
  # Service name: worker
  worker:
    image: pd3f/pd3f:latest
    depends_on:
      - parsr
      - redis
    networks:
      - tipi_main_network
    volumes:
      - ${APP_DATA_DIR}/cache:/root/.cache/
      - ${APP_DATA_DIR}/to-ocr:/to-ocr/
      - ${APP_DATA_DIR}/uploads:/uploads/
    # delete results / files after one day
    environment:
      - KEEP_RESULTS_HOURS=24
    command: ["rq", "worker", "-u", "redis://redis:6379", "--results-ttl", "86400"]
    labels:
      runtipi.managed: "true"
  # Service name: ocr_worker
  ocr_worker:
    image: pd3f/pd3f-ocr:latest
    networks:
      - tipi_main_network
    volumes:
      - ${APP_DATA_DIR}/to-ocr:/to-ocr/
    labels:
      runtipi.managed: "true"
  pd3f:
    # Name of the container
    container_name: pd3f
    # Image to be used for the container
    image: pd3f/pd3f:latest
    # Container restart policy
    restart: unless-stopped
    # Volumes to be mounted to the container
    volumes:
      # Mounting the local /DATA/AppData/$AppID/uploads directory to /uploads/ inside the container
      - ${APP_DATA_DIR}/uploads:/uploads/
    # Ports mapping between host and container
    ports:
      # Mapping port 1616 of the host to port 5000 of the container
      - "${APP_PORT}:5000"
    command: ["gunicorn", "app:app", "--bind=0.0.0.0:5000"]
    # Other services that this service depends on
    depends_on:
      - redis
      - parsr
      - worker
      - ocr_worker
    networks:
      - tipi_main_network
    labels:
      runtipi.managed: "true"
networks:
  tipi_main_network:
    external: true
