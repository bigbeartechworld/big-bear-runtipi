# Configuration for tandoor setup

# Name of the big-bear-tandoor application
name: big-bear-tandoor
# Service definitions for the big-bear-tandoor application
services:
  big-bear-tandoor-db:
    image: postgres:15-alpine
    container_name: big-bear-tandoor-db
    volumes:
      - ${APP_DATA_DIR}/postgresql:/var/lib/postgresql/data
    environment:
      - POSTGRES_PORT=5432
      - POSTGRES_USER=tandoor
      - POSTGRES_PASSWORD=100c7d31-9ec5-44ec-9101-e226c8e2420d
      - POSTGRES_DB=tandoordb
    restart: unless-stopped
    networks:
      - tipi_main_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "tandoor"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    labels:
      runtipi.managed: "true"
  tandoor:
    # Name of the container
    container_name: tandoor
    # Image to be used for the container
    image: ghcr.io/tandoorrecipes/recipes:2.3.3
    # Container restart policy
    restart: unless-stopped
    # Volumes to be mounted to the container
    volumes:
      - ${APP_DATA_DIR}/staticfiles:/opt/recipes/staticfiles
      - ${APP_DATA_DIR}/mediafiles:/opt/recipes/mediafiles
    # Ports mapping between host and container
    ports:
      # Mapping port 8080 of the host to port 8080 of the container
      - "${APP_PORT}:8080"
    # Environment variables to be passed to the container
    environment:
      - SECRET_KEY=6496f725-e4a4-4fa5-9f7b-db0114bc1568
      - DB_ENGINE=django.db.backends.postgresql
      - POSTGRES_HOST=big-bear-tandoor-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=tandoor
      - POSTGRES_PASSWORD=100c7d31-9ec5-44ec-9101-e226c8e2420d
      - POSTGRES_DB=tandoordb
    # Network to be used by the container
    networks:
      - tipi_main_network
    # Healthcheck configuration for the container
    depends_on:
      big-bear-tandoor-db:
        condition: service_healthy
    labels:
      runtipi.managed: "true"
networks:
  tipi_main_network:
    external: true
